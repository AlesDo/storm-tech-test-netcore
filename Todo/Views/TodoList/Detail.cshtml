@using Todo.Controllers
@using Todo.Data
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Views.TodoItem;
@model Todo.Models.TodoLists.TodoListWithAddViewModel
@inject GravatarClient GravatarClient
@inject ApplicationDbContext dbContext

@{
    ViewData["Title"] = $"List: {Model.TodoListDetailViewmodel.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a id="addLink" onclick="$('#addLink').hide(); $('#addForm').show();">
                <strong>Add New Item</strong>
            </a>
            <div id="addForm" style="display: none;">
                <form method="post" asp-action="CreateItem">

            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.TodoItemEditFields.TodoListTitle)
            @Html.HiddenFor(m => m.TodoListDetailViewmodel.TodoListId)
            @Html.HiddenFor(m => m.TodoListDetailViewmodel.ShowDone)
            @Html.HiddenFor(m => m.TodoListDetailViewmodel.OrderByRank)

            <div class="form-group">
                <label asp-for="TodoItemEditFields.Title"></label>
                <input asp-for="TodoItemEditFields.Title" class="form-control" />
                <span asp-validation-for="TodoItemEditFields.Title" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="TodoItemEditFields.Importance"></label>
                @Html.DropDownListFor(
                    m => m.TodoItemEditFields.Importance,
                    SelectListConvenience.ImportanceSelectListItems,
                    new {@class="form-control"}
                    )
                <span asp-validation-for="TodoItemEditFields.Importance" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TodoItemEditFields.ResponsiblePartyId"></label>
                @Html.DropDownListFor(
                    m => m.TodoItemEditFields.ResponsiblePartyId,
                    dbContext.UserSelectListItems(),
                    new {@class="form-control"}
                    )
                <span asp-validation-for="TodoItemEditFields.ResponsiblePartyId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-default">Save</button>
                <button type="reset" class="btn btn-default" onclick="$('#addLink').show(); $('#addForm').hide();">Cancel</button>
            </div>

        </form>
            </div>
        </li>
        <li class="list-group-item">
           @if (Model.TodoListDetailViewmodel.ShowDone)
                        {
                            <a asp-action="Detail" asp-route-todoListId="@Model.TodoListDetailViewmodel.TodoListId" asp-route-showDone="@false" asp-route-orderByRank="@Model.TodoListDetailViewmodel.OrderByRank">
                <strong>Hide done items</strong>
            </a>
                        }
                        else
                        {
                            <a asp-action="Detail" asp-route-todoListId="@Model.TodoListDetailViewmodel.TodoListId" asp-route-showDone="@true" asp-route-orderByRank="@Model.TodoListDetailViewmodel.OrderByRank">
                <strong>Show done items</strong>
            </a>
                        }
        </li>
        <li class="list-group-item">
           @if (Model.TodoListDetailViewmodel.OrderByRank)
                        {
                            <a asp-action="Detail" asp-route-todoListId="@Model.TodoListDetailViewmodel.TodoListId" asp-route-showDone="@Model.TodoListDetailViewmodel.ShowDone" asp-route-orderByRank="false">
                <strong>Order by importance</strong>
            </a>
                        }
                        else
                        {
                            <a asp-action="Detail" asp-route-todoListId="@Model.TodoListDetailViewmodel.TodoListId" asp-route-showDone="@Model.TodoListDetailViewmodel.ShowDone" asp-route-orderByRank="true">
                <strong>Order by rank</strong>
            </a>
                        }
        </li>

        @foreach (var item in Model.TodoListDetailViewmodel.FilteredItems)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }
            string gravatarName = await GravatarClient.GetName(item.ResponsibleParty.Email);

            <li class="list-group-item @contextualClass">
                
                <div class="row">

                <div class="col-md-8">
                    <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                        @if (item.IsDone)
                        {
                            <s>@item.Title</s>
                        }
                        else
                        {
                            <text>@item.Title</text>
                        }
                    </a>
                </div>

                <div class="col-md-4 text-right">
                    <small>
                        @item.ResponsibleParty.UserName

                        <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>
                        <br>
                        @gravatarName
                    </small>
                </div>
                </div>

            </li>
        }
    </ul>
</div>
